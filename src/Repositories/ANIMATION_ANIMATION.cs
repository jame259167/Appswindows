// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   DataSource.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.ObjectModel;
using System.Globalization;
using System.Linq;
using System.Runtime.CompilerServices;
using Entities=WPAppStudio.Entities;
using RepositoriesBase=WPAppStudio.Repositories.Base;
using WPAppStudio.Shared;

namespace WPAppStudio.Repositories
{
    /// <summary>
    /// ANIMATION_ANIMATION data source.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public class ANIMATION_ANIMATION : IANIMATION_ANIMATION 
    {
		private const int MaxResults = 10;
        private readonly ObservableCollection<Entities.ANIMATIONSchema> _data = new ObservableCollection<Entities.ANIMATIONSchema>
		{
          new Entities.ANIMATIONSchema
            {
                Id= new Guid("9467d9c4-5488-440a-aafb-5e1da47a85a9"),
                Title=@" Despicable Me 2 มิสเตอร์แสบ ร้ายเกินพิกัด 2",
                Subtitle=@"https://www.youtube.com/watch?v=pyIdN_gTj7g",
                Image=@"\Images\Item-f01341e0-88c8-4df4-b7b1-c014173fabb4.jpg",
                Description=@"เมื่อกรู จอมวางแผน ได้ทิ้งชีวิตอาชญากรไว้เบื้องหลัง เพื่อเลี้ยงดู มาร์โก้ (มิแรนด้า คอสโกรฟจากซีรีส์ iCarly), อีดิธ (ดานา ไกเออร์จาก Bullied) และแอ็กเนส (เอลซีย์ ฟิชเชอร์ จากซีรีส์ Masha and the Bear) กรู, ดร.เนฟาริโอ (รัสเซล แบรนด์จาก Get Him to the Greek, Hop) และพวกมินเนียนก็เลยมีเวลาว่างเป็นของตัวเองอย่างเหลือเฟือ 

    แต่ขณะที่เขาเริ่มจะปรับตัวในฐานะแฟมิลี่แมนในย่านชนบท องค์กรลับสุดยอดที่มุ่งมั่นกับการสู้กับปีศาจร้ายทั่วโลกก็ได้เดินเข้ามา ตอนนี้เป็นหน้าที่ของกรูและลูซี่ ไวลด์ คู่หูใหม่ของเขา (คริสติน วิก แห่ง Bridesmaids, รายการ Saturday Night Live) ที่จะค้นหาว่าใครกันแน่ที่เป็นผู้อยู่เบื้องหลังอาชญากรรมที่น่าตื่นตาตื่นใจ เพื่อจับตัวเขามาลงโทษให้ได้ เพราะคงต้องใช้อดีตสุดยอดวายร้ายของโลกเท่านั้นแหละถึงจะจับคนที่หมายมั่นปั้นมือว่าจะมาแทนที่เขาได้!!!  ",
			},
          new Entities.ANIMATIONSchema
            {
                Id= new Guid("7afb3807-09e1-4c07-933f-2cb2d12478df"),
                Title=@" Monsters University มหา'ลัย มอนส์เตอร์ ",
                Subtitle=@"https://www.youtube.com/watch?v=dp0RoDVf0yw",
                Image=@"\Images\Item-55bb4fb8-8523-4e86-84fe-47dec22b9789.jpg",
                Description=@"  ภาพยนตร์แอนิเมชั่นภาคย้อนอดีตของเหล่าสัตว์ประหลาดจากบริษัทรับจ้างหลอน ใน “มอนส์เตอร์ อิงค์” (MONSTERS, Inc.) ที่เล่าเรื่องราวชีวิตในรั้วมหาวิทยาลัยของ 2 สัตว์ประหลาดนักหลอน ไมค์ วาซอว์สกี้ และ เจมส์ พี. ซัลลิแวน ก่อนที่ทั้งคู่จะเป็นเพื่อนซี้กัน และเหล่าสัตว์ประหลาดตัวอื่นๆ กับชีวิตวัยรุ่นสุดมันส์ ใครจะไปรู้ละว่า ก่อนที่ไมค์กับซัลลี่จะกลายมาเป็นเพื่อนซี้กันขนาดนี้ เขาเคยเกลียดขี้หน้ากันขนาดไหนตอนอยู่มหาวิทยาลัย!!  ",
			},
          new Entities.ANIMATIONSchema
            {
                Id= new Guid("29089bef-0341-4627-9d7a-157bc461ab40"),
                Title=@"Planes เหินซิ่งชิงเจ้าเวหา",
                Subtitle=@"https://www.youtube.com/watch?v=3KumjBXHdzY",
                Image=@"\Images\Item-84c223cb-61ae-457f-9f41-ae00834f4095.jpg",
                Description=@"จากเหนือน่านฟ้าในโลกของ “คาร์ส” สู่ภาพยนตร์แอนิเมชั่นตลก/ผจญภัย 3 มิติที่เต็มไปด้วยแอ็คชั่นสุดมันส์จาก วอลท์ ดิสนีย์ “เพลนส์ – เหินซิ่งชิงเจ้าเวหา” ที่นำโดย ดัสตี้ (พากย์โดย เดน คุ้ก) เครื่องบินที่ใฝ่ฝันว่าจะได้เข้าร่วมการแข่งบินในฐานะนักแข่งผู้เก่งกาจ แต่เขาไม่ได้ถูกสร้างขึ้นมาเพื่อการแข่งขัน และเขายังดันกลัวความสูงอีกด้วย เขาจึงไปขอคำแนะนำจากเครื่องบินรบอาวุโสแห่งกองทัพเรือ ผู้ที่ทำให้ดัสตี้สามารถเอาชนะในการแข่งป้องกันตำแหน่งของแชมป์ประจำสนามได้ ความมุ่งมั่นของดัสตี้ถูกท้าทายครั้งยิ่งใหญ่ เมื่อเขาตั้งเป้าสู่การแข่งขันระดับโลก ที่แม้แต่เขาเองก็ไม่คิดไม่ฝันว่ามันจะเกิดขึ้นได้ และทำให้ทั้งโลกได้รู้จักกับเขา ",
			},
          new Entities.ANIMATIONSchema
            {
                Id= new Guid("4c8ad744-30d5-4108-aa0d-4d03ef33e9a3"),
                Title=@"Turbo เทอร์โบ หอยทากจอมซิ่งสายฟ้า",
                Subtitle=@"https://www.youtube.com/watch?v=MVtUIRjL274",
                Image=@"\Images\Item-204ac9ab-0f03-455f-ba67-a5fa8e7f301d.jpg",
                Description=@"เทอร์โบ หอยทากผู้ฝันว่าจะเป็นนักแข่งรถดาวรุ่ง เขารักความเร็วทำให้เขาแหวกแนวความเชื่องช้าอย่างเหลือเชื่อ!! ในสังคมหอยทากที่มีแต่ความหวาดระแวง เขาไม่ยอมรับว่าตัวเองเหมือนกับใคร จนกระทั่งเกิดเหตุการณ์ประหลาดที่พลิกชีวิตหอยทากสุดอืดของเทอร์โบไป เขาพบว่าตัวเองมีพลังความเร็วอย่างเหลือเชื่อ จึงมีการเดินทางสุดอัศจรรย์ขึ้นเพื่อท้าทายโอกาสและทำความฝันลมๆ แล้งๆ ของเขาให้เป็นจริงเพื่อลงแข่งที่งาน Indianapolis 500 สุดยิ่งใหญ่ เทอร์โบเป็นวีรบุรุษผู้ต่ำต้อยที่เสาะแสวงหาความฝันที่แทบเป็นไปไม่ได้ โดยยึดคติว่า ""ไม่มีความฝันใดใหญ่เกินกว่าคนตัวเล็กจะฝัน""  
",
			},
		};
	
		
        /// <summary>
        /// Retrieves the data from a static data source, in an observable collection of ANIMATIONSchema items.
        /// </summary>
        /// <returns>An observable collection of ANIMATIONSchema items.</returns>
        public ObservableCollection<Entities.ANIMATIONSchema> GetData(int numPage)
        {								
			return new ObservableCollection<Entities.ANIMATIONSchema>(_data.Skip(MaxResults * numPage).Take(MaxResults));
        }
		
		/// <summary>
        /// Retrieves the data from a static data source, filtered by a filter specification, in an observable collection of ANIMATIONSchema items.
        /// </summary>
		/// <param name="filter">Filter operation specification</param>
        /// <returns>An observable collection of ANIMATIONSchema items.</returns>
        public ObservableCollection<Entities.ANIMATIONSchema> Search(FilterSpecification filter)
        {
            return RepositoriesBase.Filter<Entities.ANIMATIONSchema>.FilterCollection(filter, _data);
        }
		
		/// <summary>
        /// Checks if data source has a element before the passed as parameter
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>True, if there is a previous element, false if there is not</returns>
		public bool HasPrevious(Entities.ANIMATIONSchema current)
        {
            if (current == null || !_data.Any()) return false;

            return _data.IndexOf(current) > 0;
        }
		
		/// <summary>
        /// Checks if data source has a element after the passed as parameter
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>True, if there is a next element, false if there is not</returns>
		public bool HasNext(Entities.ANIMATIONSchema current)
        {
            if (current == null || !_data.Any()) return false;

            return _data.IndexOf(current) < _data.Count - 1;
        }
		
		/// <summary>
        /// Retrieves the previous element from source.
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>The previous element from items, if it exists. Otherwise, returns null</returns>
        public Entities.ANIMATIONSchema Previous(Entities.ANIMATIONSchema current)
        {
            if (current == null || !_data.Any()) return null;

            if (_data.First().Equals(current)) return null;

            return _data[_data.IndexOf(current) - 1];
        }
		
		/// <summary>
        /// Retrieves the next element from source.
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>The next element from items, if it exists. Otherwise, returns null</returns>
        public Entities.ANIMATIONSchema Next(Entities.ANIMATIONSchema current)
        {
            if (current == null || !_data.Any()) return null;

            if (_data.Last().Equals(current)) return null;

            return _data[_data.IndexOf(current) + 1];
        }
	}
}

